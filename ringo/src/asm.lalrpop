
use crate::inst::Insts;
grammar;

pub Main:Insts={
    <l:Label> ":" => Insts::LABEL(l),
    "lui"  <r:Reg>","<i:Imm> => Insts::LUI(r,i),
    "auipc"  <r:Reg>","<i:Imm> => Insts::AUIPC(r,i),
    "addi"  <r:Reg>","<r2:Reg>","<i:Imm> => Insts::ADDI(r,r2,i),
    "slti"  <r:Reg>","<r2:Reg>","<i:Imm> => Insts::SLTI(r,r2,i),
    "sltiu"  <r:Reg>","<r2:Reg>","<i:Imm> => Insts::SLTIU(r,r2,i),
    "xori"  <r:Reg>","<r2:Reg>","<i:Imm> => Insts::XORI(r,r2,i),
    "ori"  <r:Reg>","<r2:Reg>","<i:Imm> => Insts::ORI(r,r2,i),
    "andi"  <r:Reg>","<r2:Reg>","<i:Imm> => Insts::ANDI(r,r2,i),
    "slli"  <r:Reg>","<r2:Reg>","<i:Imm> => Insts::SLLI(r,r2,i),
    "srli"  <r:Reg>","<r2:Reg>","<i:Imm> => Insts::SRLI(r,r2,i),
    "srai"  <r:Reg>","<r2:Reg>","<i:Imm> => Insts::SRAI(r,r2,i),
    "add"  <r:Reg>","<r2:Reg>","<r3:Reg> => Insts::ADD(r,r2,r3),
    "sub"  <r:Reg>","<r2:Reg>","<r3:Reg> => Insts::SUB(r,r2,r3),
    "sll"  <r:Reg>","<r2:Reg>","<r3:Reg> => Insts::SLL(r,r2,r3),
    "slt"  <r:Reg>","<r2:Reg>","<r3:Reg> => Insts::SLT(r,r2,r3),
    "sltu"  <r:Reg>","<r2:Reg>","<r3:Reg> => Insts::SLTU(r,r2,r3),
    "xor"  <r:Reg>","<r2:Reg>","<r3:Reg> => Insts::XOR(r,r2,r3),
    "srl"  <r:Reg>","<r2:Reg>","<r3:Reg> => Insts::SRL(r,r2,r3),
    "sra"  <r:Reg>","<r2:Reg>","<r3:Reg> => Insts::SRA(r,r2,r3),
    "or"  <r:Reg>","<r2:Reg>","<r3:Reg> => Insts::OR(r,r2,r3),
    "and"  <r:Reg>","<r2:Reg>","<r3:Reg> => Insts::AND(r,r2,r3),
    "fence" <i:Imm>","<i2:Imm> =>Insts::FENCE(i,i2),
    "fencei" => Insts::FENCEI,
    "csrrw" <r:Reg>","<i:Imm>","<r2:Reg>=>Insts::CSRRW(r,i,r2),
    "csrrs" <r:Reg>","<i:Imm>","<r2:Reg>=>Insts::CSRRS(r,i,r2),
    "csrrc" <r:Reg>","<i:Imm>","<r2:Reg>=>Insts::CSRRC(r,i,r2),
    "csrrwi"<r:Reg>","<i:Imm>","<i2:Imm>=>Insts::CSRRWI(r,i,i2),
    "csrrsi" <r:Reg>","<i:Imm>","<i2:Imm>=>Insts::CSRRSI(r,i,i2),
    "csrrci" <r:Reg>","<i:Imm>","<i2:Imm>=>Insts::CSRRCI(r,i,i2),
    "ecall" => Insts::ECALL,
    "ebreak" => Insts::EBREAK,
    "uret" => Insts::URET,
    "sret" => Insts::SRET,
    "mret" => Insts::MRET,
    "wfi" => Insts::WFI,
    "sfences.vma" <r:Reg>","<r2:Reg> => Insts::SFVMA(r,r2),
    "lb" <r:Reg>","<i:Imm>"("<r2:Reg>")" => Insts::LB(r,i,r2),
    "lh" <r:Reg>","<i:Imm>"("<r2:Reg>")" => Insts::LH(r,i,r2),
    "lw" <r:Reg>","<i:Imm>"("<r2:Reg>")" => Insts::LW(r,i,r2),
    "lbu" <r:Reg>","<i:Imm>"("<r2:Reg>")" => Insts::LBU(r,i,r2),
    "lhu" <r:Reg>","<i:Imm>"("<r2:Reg>")" => Insts::LHU(r,i,r2),
    "sb" <r:Reg>","<i:Imm>"("<r2:Reg>")" => Insts::SB(r,i,r2),
    "sh" <r:Reg>","<i:Imm>"("<r2:Reg>")" => Insts::SH(r,i,r2),
    "sw" <r:Reg>","<i:Imm>"("<r2:Reg>")" => Insts::SW(r,i,r2),
    "jal" <r:Reg>","<i:Imm> => Insts::JAL(r,i),
    "jal" <r:Reg>","<l:Label> => Insts::JALL(r,l),
    "jalr" <r:Reg>","<r2:Reg>","<i:Imm> => Insts::JALR(r,r2,i),
    "jalr" <r:Reg>","<i:Imm>"("<r2:Reg>")" => Insts::JALR(r,r2,i),
    //"jalr" <r:Reg>","<r2:Reg>","<l:Label> => Insts::JALRL(r,r2,l),
    "beq" <r:Reg>","<r2:Reg>","<i:Imm> => Insts::BEQ(r,r2,i),
    "bne" <r:Reg>","<r2:Reg>","<i:Imm> => Insts::BNE(r,r2,i),
    "blt" <r:Reg>","<r2:Reg>","<i:Imm> => Insts::BLT(r,r2,i),
    "bge" <r:Reg>","<r2:Reg>","<i:Imm> => Insts::BGE(r,r2,i),
    "bltu" <r:Reg>","<r2:Reg>","<i:Imm> => Insts::BLTU(r,r2,i),
    "bgeu" <r:Reg>","<r2:Reg>","<i:Imm> => Insts::BGEU(r,r2,i),

    "beq" <r:Reg>","<r2:Reg>","<l:Label> => Insts::BEQL(r,r2,l),
    "bne" <r:Reg>","<r2:Reg>","<l:Label> => Insts::BNEL(r,r2,l),
    "blt" <r:Reg>","<r2:Reg>","<l:Label> => Insts::BLTL(r,r2,l),
    "bge" <r:Reg>","<r2:Reg>","<l:Label> => Insts::BGEL(r,r2,l),
    "bltu" <r:Reg>","<r2:Reg>","<l:Label> => Insts::BLTUL(r,r2,l),
    "bgeu" <r:Reg>","<r2:Reg>","<l:Label> => Insts::BGEUL(r,r2,l),

    "la" <r:Reg> ","<i:Imm> => Insts::LA(r,i),
    "la" <r:Reg>","<l:Label> => Insts::LAL(r,l),


    "lb"  <r:Reg>","<l:Label> => Insts::LBL(r,l),
    "lh"  <r:Reg>","<l:Label> => Insts::LHL(r,l),
    "lw"  <r:Reg>","<l:Label> => Insts::LWL(r,l),
    "sb"  <r:Reg>","<l:Label> =>Insts::SBL(r,l),
    "sh"  <r:Reg>","<l:Label>  => Insts::SHL(r,l),
    "sw"  <r:Reg>","<l:Label> => Insts::SWL(r,l),
    "flw"  <r:FReg>","<l:Label> => Insts::FLWL(r,l),
    "fsw"  <r:FReg>","<l:Label>  => Insts::FSWL(r,l),
    "nop" => Insts::ADDI(0,0,0),
    "li"  <r:Reg>","<i:Imm> => Insts::ADDI(r,0,i),
    "mv"  <r:Reg>"," <r2:Reg> => Insts::ADDI(r,r2,0),
    "not"  <r:Reg>","<r2:Reg> => Insts::XORI(r,r2,-1),
    "neg"  <r:Reg>","<r2:Reg> => Insts::SUB(r,0,r2),
    "seqz"  <r:Reg> ","<r2:Reg> => Insts::SLTIU(r,r2,1),
    "snez"  <r:Reg> ","<r2:Reg> => Insts::SLTU(r,0,r2),
    "sltz"  <r:Reg> ","<r2:Reg> => Insts::SLT(r,r2,0),
    "sgtz"  <r:Reg> ","<r2:Reg> => Insts::SLT(r,0,r2),
    "beqz"  <r:Reg>","<i:Imm> => Insts::BEQ(r,0,i),
    "bnez"  <r:Reg>","<i:Imm> => Insts::BNE(r,0,i),
    "blez"  <r:Reg>","<i:Imm> => Insts::BGE(0,r,i),
    "bgez"  <r:Reg>","<i:Imm> => Insts::BGE(r,0,i),
    "bltz"  <r:Reg>","<i:Imm> => Insts::BLT(r,0,i),
    "bgtz"  <r:Reg>","<i:Imm> => Insts::BLT(0,r,i),

    "beqz"  <r:Reg>","<l:Label> => Insts::BEQL(r,0,l),
    "bnez"  <r:Reg>","<l:Label> => Insts::BNEL(r,0,l),
    "blez"  <r:Reg>","<l:Label> => Insts::BGEL(0,r,l),
    "bgez"  <r:Reg>","<l:Label> => Insts::BGEL(r,0,l),
    "bltz"  <r:Reg>","<l:Label> => Insts::BLTL(r,0,l),
    "bgtz"  <r:Reg>","<l:Label> => Insts::BLTL(0,r,l),

    "bgt"  <r:Reg>","<r2:Reg>","<i:Imm> => Insts::BLT(r2,r,i),
    "ble"  <r:Reg>","<r2:Reg>","<i:Imm> => Insts::BGE(r2,r,i),
    "bgtu"  <r:Reg>","<r2:Reg>","<i:Imm> => Insts::BLTU(r2,r,i),
    "bleu"  <r:Reg>","<r2:Reg>","<i:Imm> => Insts::BGEU(r2,r,i),
    "bgt"  <r:Reg>","<r2:Reg>","<l:Label> => Insts::BLTL(r2,r,l),
    "ble"  <r:Reg>","<r2:Reg>","<l:Label> => Insts::BGEL(r2,r,l),
    "bgtu"  <r:Reg>","<r2:Reg>","<l:Label> => Insts::BLTUL(r2,r,l),
    "bleu"  <r:Reg>","<r2:Reg>","<l:Label> => Insts::BGEUL(r2,r,l),

    "j"  <l:Label> => Insts::JALL(0,l),
    "j"  <i:Imm> => Insts::JAL(0,i),
    "jal"  <i:Imm> => Insts::JAL(1,i),
    "jal" <l:Label> => Insts::JALL(1,l),
    "jr"  <r:Reg> => Insts::JALR(0,r,0),
    "jalr"  <r:Reg> => Insts::JALR(1,r,0),
    "ret"=> Insts::JALR(0,1,0),
    "call"  <i:Imm> => Insts::CALL(i),
    "call"  <l:Label> => Insts::CALLL(l),
    "tail"  <i:Imm> => Insts::TAIL(i),
    "tail"  <l:Label> => Insts::TAILL(l),
    "fmadd.s" <rd:FReg>","<r1:FReg>","<r2:FReg>","<r3:FReg> => Insts::FMADDS(rd,r1,r2,r3),
    "fmsub.s" <rd:FReg>","<r1:FReg>","<r2:FReg>","<r3:FReg> => Insts::FMSUBS(rd,r1,r2,r3),
    "fnmadd.s" <rd:FReg>","<r1:FReg>","<r2:FReg>","<r3:FReg> => Insts::FNMADDS(rd,r1,r2,r3),
    "fnmsub.s" <rd:FReg>","<r1:FReg>","<r2:FReg>","<r3:FReg> => Insts::FNMSUBS(rd,r1,r2,r3),
    "fadd.s" <rd:FReg>","<r1:FReg>","<r2:FReg>=> Insts::FADDS(rd,r1,r2),
    "fsub.s" <rd:FReg>","<r1:FReg>","<r2:FReg> => Insts::FSUBS(rd,r1,r2),
    "fmul.s" <rd:FReg>","<r1:FReg>","<r2:FReg> => Insts::FMULS(rd,r1,r2),
    "fdiv.s" <rd:FReg>","<r1:FReg>","<r2:FReg> => Insts::FDIVS(rd,r1,r2),
    "fadd" <rd:FReg>","<r1:FReg>","<r2:FReg>=> Insts::FADDS(rd,r1,r2),
    "fsub" <rd:FReg>","<r1:FReg>","<r2:FReg> => Insts::FSUBS(rd,r1,r2),
    "fmul" <rd:FReg>","<r1:FReg>","<r2:FReg> => Insts::FMULS(rd,r1,r2),
    "fdiv" <rd:FReg>","<r1:FReg>","<r2:FReg> => Insts::FDIVS(rd,r1,r2),
    "fsqrt" <rd:FReg>","<r1:FReg>=> Insts::FSQRTS(rd,r1),  
    "fsgnj" <rd:FReg>","<r1:FReg>","<r2:FReg> => Insts::FSGNJS(rd,r1,r2),
    "fmv"<rd:FReg>","<r1:FReg> => Insts::FSGNJS(rd,r1,r1),
    "fneg"<rd:FReg>","<r1:FReg> => Insts::FSGNJNS(rd,r1,r1),
    //"fsgnjn.s" <rd:Reg>","<r1:Reg>","<r2:Reg> => Insts::FSGNJNS(rd,r1,r2),
    //"fsgnjx.s" <rd:Reg>","<r1:Reg>","<r2:Reg> => Insts::FSGNJXS(rd,r1,r2),
    "fmin.s" <rd:FReg>","<r1:FReg>","<r2:FReg> => Insts::FMINS(rd,r1,r2),
    "fmax.s" <rd:FReg>","<r1:FReg>","<r2:FReg> => Insts::FMAXS(rd,r1,r2),
    "fmin" <rd:FReg>","<r1:FReg>","<r2:FReg> => Insts::FMINS(rd,r1,r2),
    "fmax" <rd:FReg>","<r1:FReg>","<r2:FReg> => Insts::FMAXS(rd,r1,r2),
    "fcvt.w.s" <rd:FReg>","<r1:FReg>","<i:Imm>=> Insts::FCVTWS(rd,r1,i),  
    "fcvt.wu.s" <rd:FReg>","<r1:FReg>","<i:Imm>=> Insts::FCVTWUS(rd,r1,i),
    "fcvt.w.s" <rd:Reg>","<r1:FReg>","<i:Imm>=> Insts::FCVTWS(rd,r1,i),  
    "fcvt.wu.s" <rd:Reg>","<r1:FReg>","<i:Imm>=> Insts::FCVTWUS(rd,r1,i),    
    "fmv.x.w" <rd:Reg>","<r1:FReg>=> Insts::FMVXW(rd,r1),  
    "feq.s" <rd:Reg>","<r1:FReg>","<r2:FReg> => Insts::FEQS(rd,r1,r2),
    "fless" <rd:Reg>","<r1:FReg>","<r2:FReg> => Insts::FLTS(rd,r1,r2),
    "flt.s" <rd:Reg>","<r1:FReg>","<r2:FReg> => Insts::FLTS(rd,r1,r2),
    "fle.s" <rd:Reg>","<r1:FReg>","<r2:FReg> => Insts::FLES(rd,r1,r2),
    "feq" <rd:Reg>","<r1:FReg>","<r2:FReg> => Insts::FEQS(rd,r1,r2),
    "flt" <rd:Reg>","<r1:FReg>","<r2:FReg> => Insts::FLTS(rd,r1,r2),
    "fle" <rd:Reg>","<r1:FReg>","<r2:FReg> => Insts::FLES(rd,r1,r2),
    "fclass.s" <rd:Reg>","<r1:FReg>=> Insts::FCLASSS(rd,r1),  
    "fcvt.s.w" <rd:FReg>","<r1:Reg>=> Insts::FCVTSW(rd,r1),  
    "fcvt.s.wu" <rd:FReg>","<r1:Reg>=> Insts::FCVTSWU(rd,r1),  
    "fmv.w.x" <rd:FReg>","<r1:Reg>=> Insts::FMVWX(rd,r1),
    "floor"<rd:FReg>","<r1:FReg>=>Insts::FCVTWS(rd,r1,2),
    "ftoi"<rd:Reg>","<r1:FReg>=>Insts::FCVTWS(rd,r1,0), 
    "itof"<rd:FReg>","<r1:Reg>=>Insts::FCVTSW(rd,r1), 
    "flw" <r:FReg>","<i:Imm>"("<r1:Reg>")" => Insts::FLW(r,i,r1),
    "fsw" <r:FReg>","<i:Imm>"("<r1:Reg>")" => Insts::FSW(r,i,r1),

    "fabs"<rd:FReg>","<r1:FReg>=> Insts::FSGNJXS(rd,r1,r1),
    "fhalf"<rd:FReg>","<r1:FReg> => Insts::FHALF(rd,r1),

    "mul"<rd:Reg>","<r1:Reg>","<r2:Reg>=>Insts::MUL(rd,r1,r2),
    "mulh"<rd:Reg>","<r1:Reg>","<r2:Reg>=>Insts::MULH(rd,r1,r2),
    "mulhsu"<rd:Reg>","<r1:Reg>","<r2:Reg>=>Insts::MULHSU(rd,r1,r2),
    "mulhu"<rd:Reg>","<r1:Reg>","<r2:Reg>=>Insts::MULHU(rd,r1,r2),

    "div"<rd:Reg>","<r1:Reg>","<r2:Reg>=>Insts::DIV(rd,r1,r2),
    "divu"<rd:Reg>","<r1:Reg>","<r2:Reg>=>Insts::DIVU(rd,r1,r2),
    "rem"<rd:Reg>","<r1:Reg>","<r2:Reg>=>Insts::REM(rd,r1,r2),
    "remu"<rd:Reg>","<r1:Reg>","<r2:Reg>=>Insts::REMU(rd,r1,r2),
    "in"<rd:Reg> =>Insts::IN(rd),
    "out"<rs1:Reg> => Insts::OUT(rs1),
    <imm:Imm>=>Insts::IMM(imm),
    "bfeq" <r:FReg>","<r2:FReg>","<i:Imm> => Insts::BFEQ(r,r2,i),
    "bfne" <r:FReg>","<r2:FReg>","<i:Imm> => Insts::BFNE(r,r2,i),
    "bflt" <r:FReg>","<r2:FReg>","<i:Imm> => Insts::BFLT(r,r2,i),
    "bfge" <r:FReg>","<r2:FReg>","<i:Imm> => Insts::BFGE(r,r2,i),
    "bfeq" <r:FReg>","<r2:FReg>","<l:Label> => Insts::BFEQL(r,r2,l),
    "bfne" <r:FReg>","<r2:FReg>","<l:Label> => Insts::BFNEL(r,r2,l),
    "bflt" <r:FReg>","<r2:FReg>","<l:Label> => Insts::BFLTL(r,r2,l),
    "bfge" <r:FReg>","<r2:FReg>","<l:Label> => Insts::BFGEL(r,r2,l),
};
Imm :i32 ={
    <s:r"-*[0-9]+"> => s.parse().unwrap(),
    <s:r"-*[0-9]+[.|,][0-9]+"> => s.replace(",",".").parse::<f32>().unwrap().to_bits() as i32
};

Label :String = {
    <s:r"[.|A-z][.|A-z|0-9]*"> => s.to_string()
};

Reg:u8={
        "zero"=>0,
        "%zero"=>0,
        "%x0"=>0,
        "%ra"=>1,
        "%sp"=>2,
        "%gp"=>3,
        "%tp"=>4,
        "%t0"=>5,
        "%t1"=>6,
        "%t2"=>7,
        "%s0"=>8,
        "%fp"=>8,
        "%s1"=>9,
        "%a0"=>10,
        "%a1"=>11,
        "%a2"=>12,
        "%a3"=>13,
        "%a4"=>14,
        "%a5"=>15,
        "%a6"=>16,
        "%a7"=>17,
        "%s2"=>18,
        "%s3"=>19,
        "%s4"=>20,
        "%s5"=>21,
        "%s6"=>22,
        "%s7"=>23,
        "%s8"=>24,
        "%s9"=>25,
        "%s10"=>26,
        "%s11"=>27,
        "%t3"=>28,
        "%t4"=>29,
        "%t5"=>30,
        "%t6"=>31,
        "%x1"=>1,
        "%x2"=>2,
        "%x3"=>3,
        "%x4"=>4,
        "%x5"=>5,
        "%x6"=>6,
        "%x7"=>7,
        "%x8"=>8,
        "%x9"=>9,
        "%x10"=>10,
        "%x11"=>11,
        "%x12"=>12,
        "%x13"=>13,
        "%x14"=>14,
        "%x15"=>15,
        "%x16"=>16,
        "%x17"=>17,
        "%x18"=>18,
        "%x19"=>19,
        "%x20"=>20,
        "%x21"=>21,
        "%x22"=>22,
        "%x23"=>23,
        "%x24"=>24,
        "%x25"=>25,
        "%x26"=>26,
        "%x27"=>27,
        "%x28"=>28,
        "%x29"=>29,
        "%x30"=>30,
        "%x31"=>31,
        "x0"=>0,
        "ra"=>1,
        "sp"=>2,
        "gp"=>3,
        "tp"=>4,
        "t0"=>5,
        "t1"=>6,
        "t2"=>7,
        "s0"=>8,
        "fp"=>8,
        "s1"=>9,
        "a0"=>10,
        "a1"=>11,
        "a2"=>12,
        "a3"=>13,
        "a4"=>14,
        "a5"=>15,
        "a6"=>16,
        "a7"=>17,
        "s2"=>18,
        "s3"=>19,
        "s4"=>20,
        "s5"=>21,
        "s6"=>22,
        "s7"=>23,
        "s8"=>24,
        "s9"=>25,
        "s10"=>26,
        "s11"=>27,
        "t3"=>28,
        "t4"=>29,
        "t5"=>30,
        "t6"=>31,
        "x1"=>1,
        "x2"=>2,
        "x3"=>3,
        "x4"=>4,
        "x5"=>5,
        "x6"=>6,
        "x7"=>7,
        "x8"=>8,
        "x9"=>9,
        "x10"=>10,
        "x11"=>11,
        "x12"=>12,
        "x13"=>13,
        "x14"=>14,
        "x15"=>15,
        "x16"=>16,
        "x17"=>17,
        "x18"=>18,
        "x19"=>19,
        "x20"=>20,
        "x21"=>21,
        "x22"=>22,
        "x23"=>23,
        "x24"=>24,
        "x25"=>25,
        "x26"=>26,
        "x27"=>27,
        "x28"=>28,
        "x29"=>29,
        "x30"=>30,
        "x31"=>31,
};
FReg:u8={
    "%ft0"=>0,
    "%ft1"=>1,
    "%ft2"=>2,
    "%ft3"=>3,
    "%ft4"=>4,
    "%ft5"=>5,
    "%ft6"=>6,
    "%ft7"=>7,
    "%fs0"=>8,
    "%fs1"=>9,
    "%fa0"=>10,
    "%fa1"=>11,
    "%fa2"=>12,
    "%fa3"=>13,
    "%fa4"=>14,
    "%fa5"=>15,
    "%fa6"=>16,
    "%fa7"=>17,
    "%fs2"=>18,
    "%fs3"=>19,
    "%fs4"=>20,
    "%fs5"=>21,
    "%fs6"=>22,
    "%fs7"=>23,
    "%fs8"=>24,
    "%fs9"=>25,
    "%fs10"=>26,
    "%fs11"=>27,
    "%ft8"=>28,
    "%ft9"=>29,
    "%ft10"=>30,
    "%ft11"=>31,
    "ft0"=>0,
    "ft1"=>1,
    "ft2"=>2,
    "ft3"=>3,
    "ft4"=>4,
    "ft5"=>5,
    "ft6"=>6,
    "ft7"=>7,
    "fs0"=>8,
    "fs1"=>9,
    "fa0"=>10,
    "fa1"=>11,
    "fa2"=>12,
    "fa3"=>13,
    "fa4"=>14,
    "fa5"=>15,
    "fa6"=>16,
    "fa7"=>17,
    "fs2"=>18,
    "fs3"=>19,
    "fs4"=>20,
    "fs5"=>21,
    "fs6"=>22,
    "fs7"=>23,
    "fs8"=>24,
    "fs9"=>25,
    "fs10"=>26,
    "fs11"=>27,
    "ft8"=>28,
    "ft9"=>29,
    "ft10"=>30,
    "ft11"=>31,
};