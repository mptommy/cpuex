Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
---------------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2019.2.1 (win64) Build 2729669 Thu Dec  5 04:49:17 MST 2019
| Date         : Tue Feb 16 01:23:57 2021
| Host         : LAPTOP-D2IMMG8J running 64-bit major release  (build 9200)
| Command      : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
| Design       : design_1_wrapper
| Device       : xcku040-ffva1156-2-e
| Speed File   : -2
| Design State : Synthesized
---------------------------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 62
+----------+----------+-----------------------------------------------------+------------+
| Rule     | Severity | Description                                         | Violations |
+----------+----------+-----------------------------------------------------+------------+
| CFGBVS-1 | Warning  | Missing CFGBVS and CONFIG_VOLTAGE Design Properties | 1          |
| DPIP-2   | Warning  | Input pipelining                                    | 33         |
| DPOP-3   | Warning  | PREG Output pipelining                              | 10         |
| DPOP-4   | Warning  | MREG Output pipelining                              | 18         |
+----------+----------+-----------------------------------------------------+------------+

2. REPORT DETAILS
-----------------
CFGBVS-1#1 Warning
Missing CFGBVS and CONFIG_VOLTAGE Design Properties  
Neither the CFGBVS nor CONFIG_VOLTAGE voltage property is set in the current_design.  Configuration bank voltage select (CFGBVS) must be set to VCCO or GND, and CONFIG_VOLTAGE must be set to the correct configuration voltage, in order to determine the I/O voltage support for the pins in bank 0.  It is suggested to specify these either using the 'Edit Device Properties' function in the GUI or directly in the XDC file using the following syntax:

 set_property CFGBVS value1 [current_design]
 #where value1 is either VCCO or GND

 set_property CONFIG_VOLTAGE value2 [current_design]
 #where value2 is the voltage provided to configuration bank 0

Refer to the device configuration user guide for more information.
Related violations: <none>

DPIP-2#1 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u1/a1grd input design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u1/a1grd/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#2 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u1/a1grdr_reg input design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u1/a1grdr_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#3 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u2/hhr_reg input design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u2/hhr_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#4 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u2/hhr_reg input design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u2/hhr_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#5 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u2/hlr_reg input design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u2/hlr_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#6 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u2/lhr_reg input design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u2/lhr_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#7 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u2/mmul input design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u2/mmul/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#8 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/finv_instance/a1grd input design_1_i/core_0/inst/exec_instance/FPU_instance/finv_instance/a1grd/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#9 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/finv_instance/a1grdr_reg input design_1_i/core_0/inst/exec_instance/FPU_instance/finv_instance/a1grdr_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#10 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fmul_instance/hhr_reg input design_1_i/core_0/inst/exec_instance/FPU_instance/fmul_instance/hhr_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#11 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fmul_instance/hhr_reg input design_1_i/core_0/inst/exec_instance/FPU_instance/fmul_instance/hhr_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#12 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fmul_instance/hlr_reg input design_1_i/core_0/inst/exec_instance/FPU_instance/fmul_instance/hlr_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#13 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fmul_instance/hlr_reg input design_1_i/core_0/inst/exec_instance/FPU_instance/fmul_instance/hlr_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#14 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fmul_instance/lhr_reg input design_1_i/core_0/inst/exec_instance/FPU_instance/fmul_instance/lhr_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#15 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fmul_instance/lhr_reg input design_1_i/core_0/inst/exec_instance/FPU_instance/fmul_instance/lhr_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#16 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fmul_instance/mmul input design_1_i/core_0/inst/exec_instance/FPU_instance/fmul_instance/mmul/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#17 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fsqr_instance/hhr_reg input design_1_i/core_0/inst/exec_instance/FPU_instance/fsqr_instance/hhr_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#18 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fsqr_instance/hhr_reg input design_1_i/core_0/inst/exec_instance/FPU_instance/fsqr_instance/hhr_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#19 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fsqr_instance/hlr_reg input design_1_i/core_0/inst/exec_instance/FPU_instance/fsqr_instance/hlr_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#20 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fsqr_instance/hlr_reg input design_1_i/core_0/inst/exec_instance/FPU_instance/fsqr_instance/hlr_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#21 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fsqr_instance/lhr_reg input design_1_i/core_0/inst/exec_instance/FPU_instance/fsqr_instance/lhr_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#22 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fsqr_instance/lhr_reg input design_1_i/core_0/inst/exec_instance/FPU_instance/fsqr_instance/lhr_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#23 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fsqr_instance/mmul input design_1_i/core_0/inst/exec_instance/FPU_instance/fsqr_instance/mmul/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#24 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/a1grd input design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/a1grd/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#25 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/a1grd__0 input design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/a1grd__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#26 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/a1grdr_reg input design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/a1grdr_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#27 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/a1grdr_reg__0 input design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/a1grdr_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#28 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/p_0_out__0 input design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/p_0_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#29 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/p_0_out__1 input design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/p_0_out__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#30 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/tsqmulm input design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/tsqmulm/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#31 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/tsqmulm input design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/tsqmulm/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#32 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/tsqmulmr_reg input design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/tsqmulmr_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#33 Warning
Input pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/tsqmulmr_reg input design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/tsqmulmr_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-3#1 Warning
PREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u1/a1grd output design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u1/a1grd/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#2 Warning
PREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u2/mmul output design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u2/mmul/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#3 Warning
PREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/finv_instance/a1grd output design_1_i/core_0/inst/exec_instance/FPU_instance/finv_instance/a1grd/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#4 Warning
PREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fmul_instance/mmul output design_1_i/core_0/inst/exec_instance/FPU_instance/fmul_instance/mmul/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#5 Warning
PREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fsqr_instance/mmul output design_1_i/core_0/inst/exec_instance/FPU_instance/fsqr_instance/mmul/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#6 Warning
PREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/a1grd output design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/a1grd/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#7 Warning
PREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/a1grd__0 output design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/a1grd__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#8 Warning
PREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/p_0_out__0 output design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/p_0_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#9 Warning
PREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/p_0_out__1 output design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/p_0_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#10 Warning
PREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/tsqmulm output design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/tsqmulm/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-4#1 Warning
MREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u1/a1grd multiplier stage design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u1/a1grd/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#2 Warning
MREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u1/a1grdr_reg multiplier stage design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u1/a1grdr_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#3 Warning
MREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u2/hlr_reg multiplier stage design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u2/hlr_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#4 Warning
MREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u2/lhr_reg multiplier stage design_1_i/core_0/inst/exec_instance/FPU_instance/fdiv_instance/u2/lhr_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#5 Warning
MREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/finv_instance/a1grd multiplier stage design_1_i/core_0/inst/exec_instance/FPU_instance/finv_instance/a1grd/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#6 Warning
MREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/finv_instance/a1grdr_reg multiplier stage design_1_i/core_0/inst/exec_instance/FPU_instance/finv_instance/a1grdr_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#7 Warning
MREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fmul_instance/hlr_reg multiplier stage design_1_i/core_0/inst/exec_instance/FPU_instance/fmul_instance/hlr_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#8 Warning
MREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fmul_instance/lhr_reg multiplier stage design_1_i/core_0/inst/exec_instance/FPU_instance/fmul_instance/lhr_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#9 Warning
MREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fsqr_instance/hlr_reg multiplier stage design_1_i/core_0/inst/exec_instance/FPU_instance/fsqr_instance/hlr_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#10 Warning
MREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/fsqr_instance/lhr_reg multiplier stage design_1_i/core_0/inst/exec_instance/FPU_instance/fsqr_instance/lhr_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#11 Warning
MREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/a1grd multiplier stage design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/a1grd/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#12 Warning
MREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/a1grd__0 multiplier stage design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/a1grd__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#13 Warning
MREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/a1grdr_reg multiplier stage design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/a1grdr_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#14 Warning
MREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/a1grdr_reg__0 multiplier stage design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/a1grdr_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#15 Warning
MREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/p_0_out__0 multiplier stage design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/p_0_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#16 Warning
MREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/p_0_out__1 multiplier stage design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/p_0_out__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#17 Warning
MREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/tsqmulm multiplier stage design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/tsqmulm/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#18 Warning
MREG Output pipelining  
DSP design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/tsqmulmr_reg multiplier stage design_1_i/core_0/inst/exec_instance/FPU_instance/sqrt_instance/tsqmulmr_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>


